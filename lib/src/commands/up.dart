/// dcli script generated by:
/// dcli create docker_push.dart
///
/// See
/// https://pub.dev/packages/dcli#-installing-tab-
///
/// For details on installing dcli.
///
///
///import 'dart:io';

import 'dart:io';
import 'package:path/path.dart';

import 'package:args/command_runner.dart';
import 'package:dcli/dcli.dart';

import '../env_file.dart';
import '../unpubd_paths.dart';
import '../unpubd_settings.dart';
import '../util/log.dart';

///
class UpCommand extends Command<void> {
  ///
  UpCommand() {
    argParser.addFlag('detach',
        abbr: 'd', help: 'Start unpubd as a background daemon');

    Settings().setVerbose(enabled: true);
  }

  @override
  String get description => 'Starts the unpubd daemon.';

  @override
  String get name => 'up';

  @override
  void run() {
    UnpubdSettings.load();

    if (!exists(UnpubdSettings.pathToSettings)) {
      logerr(red('''You must run 'unpubd install' first.'''));
      exit(1);
    }

    final detach = argResults!['detach'] as bool;
    up(detach: detach);
  }

  ///
  void up({required bool detach}) {
    EnvFile.create();
    start(detach: detach);
  }

  Future<void> start({required bool detach}) async {
    EnvFile.create();
    print('Starting unpubd');
    final detachArg = detach ? '--detach' : '';

    'docker-compose up $detachArg'
        .start(workingDirectory: dirname(UnpubdPaths().pathToDockerCompose));
  }
}
